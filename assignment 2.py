# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nq33dEkwLYc7N_-c_jcuddzEIgVbnAQI
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error, mean_absolute_error

data = pd.read_csv('/content/Real estate.csv')


X = data[['No', 'X1 transaction date', 'X2 house age', 'X3 distance to the nearest MRT station', 'X4 number of convenience stores', 'X5 latitude', 'X6 longitude']]
Y = data['Y house price of unit area']

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

# Train the random forest model
rf_model = RandomForestRegressor(random_state=42)
rf_model.fit(X_train, Y_train)

# Train the decision tree model
dt_model = DecisionTreeRegressor(random_state=42)
dt_model.fit(X_train, Y_train)

rf_y_pred = rf_model.predict(X_test)
dt_y_pred = dt_model.predict(X_test)

# Evaluate the models
rf_mse = mean_squared_error(Y_test, rf_y_pred)
rf_mae = mean_absolute_error(Y_test, rf_y_pred)
rf_rmse = mean_squared_error(Y_test, rf_y_pred, squared=False)

dt_mse = mean_squared_error(Y_test, dt_y_pred)
dt_mae = mean_absolute_error(Y_test, dt_y_pred)
dt_rmse = mean_squared_error(Y_test, dt_y_pred, squared=False)

print("Random Forest:")
print("Mean Squared Error:", rf_mse)
print("Mean Absolute Error:", rf_mae)
print("Root Mean Squared Error:", rf_rmse)

print("\nDecision Tree:")
print("Mean Squared Error:", dt_mse)
print("Mean Absolute Error:", dt_mae)
print("Root Mean Squared Error:", dt_rmse)

# Compare the models
if rf_rmse < dt_rmse:
    print("\nRandom Forest is preferred.")
else:
    print("\nDecision Tree is preferred.")